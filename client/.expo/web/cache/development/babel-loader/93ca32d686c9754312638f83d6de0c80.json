{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Camera } from \"expo-camera\";\nexport var pickImage = function pickImage() {\n  var result;\n  return _regeneratorRuntime.async(function pickImage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1\n          }));\n\n        case 2:\n          result = _context.sent;\n          result ? setImage(result.uri) : null;\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var takePhoto = function takePhoto(setRecordVideoPermission, setAudioPermission, setCameraPermission) {\n  var _await$Camera$request, status, _await$ImagePicker$la, uri, s, audio;\n\n  return _regeneratorRuntime.async(function takePhoto$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n        case 2:\n          _await$Camera$request = _context2.sent;\n          status = _await$Camera$request.status;\n          setCameraPermission(status === 'granted');\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n        case 7:\n          _await$ImagePicker$la = _context2.sent;\n          uri = _await$ImagePicker$la.uri;\n          setImage(uri);\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync().status);\n\n        case 12:\n          s = _context2.sent;\n          setRecordVideoPermission(s === \"granted\");\n          _context2.next = 16;\n          return _regeneratorRuntime.awrap(Camera.requestMicrophonePermissionsAsync().status);\n\n        case 16:\n          audio = _context2.sent;\n          setAudioPermission(audio === \"granted\");\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/appea/OneDrive/デスクトップ/nimble/nimble-sono2/client/src/component/utilis/camera/pickAndTakePic.js"],"names":["ImagePicker","Camera","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","setImage","uri","takePhoto","setRecordVideoPermission","setAudioPermission","setCameraPermission","requestCameraPermissionsAsync","status","launchCameraAsync","s","requestMicrophonePermissionsAsync","audio"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,SAASC,MAAT,QAAuB,aAAvB;AAGA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFF,WAAW,CAACG,uBAAZ,CAAoC;AACrDC,YAAAA,UAAU,EAAEJ,WAAW,CAACK,gBAAZ,CAA6BC,GADY;AAErDC,YAAAA,aAAa,EAAE,IAFsC;AAGrDC,YAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,YAAAA,OAAO,EAAE;AAJ4C,WAApC,CAFE;;AAAA;AAEjBC,UAAAA,MAFiB;AAQrBA,UAAAA,MAAM,GAAGC,QAAQ,CAACD,MAAM,CAACE,GAAR,CAAX,GAA0B,IAAhC;;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAYP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,wBAAP,EAAiCC,kBAAjC,EAAqDC,mBAArD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIf,MAAM,CAACgB,6BAAP,EADJ;;AAAA;AAAA;AACbC,UAAAA,MADa,yBACbA,MADa;AAErBF,UAAAA,mBAAmB,CAACE,MAAM,KAAK,SAAZ,CAAnB;AAFqB;AAAA,2CAIDlB,WAAW,CAACmB,iBAAZ,EAJC;;AAAA;AAAA;AAIdP,UAAAA,GAJc,yBAIdA,GAJc;AAKrBD,UAAAA,QAAQ,CAACC,GAAD,CAAR;AALqB;AAAA,2CAMLX,MAAM,CAACgB,6BAAP,GAAuCC,MANlC;;AAAA;AAMfE,UAAAA,CANe;AAOrBN,UAAAA,wBAAwB,CAACM,CAAC,KAAK,SAAP,CAAxB;AAPqB;AAAA,2CAQDnB,MAAM,CAACoB,iCAAP,GAA2CH,MAR1C;;AAAA;AAQfI,UAAAA,KARe;AASrBP,UAAAA,kBAAkB,CAACO,KAAK,KAAK,SAAX,CAAlB;;AATqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import * as ImagePicker from 'expo-image-picker';\r\nimport { Camera } from \"expo-camera\";\r\n\r\n\r\nexport const pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    result ? setImage(result.uri) : null\r\n}\r\n\r\n\r\nexport const takePhoto = async (setRecordVideoPermission, setAudioPermission, setCameraPermission)=>{\r\n    const { status } = await Camera.requestCameraPermissionsAsync();\r\n    setCameraPermission(status === 'granted');\r\n\r\n    const {uri} = await ImagePicker.launchCameraAsync()\r\n    setImage(uri)\r\n    const s = await Camera.requestCameraPermissionsAsync().status\r\n    setRecordVideoPermission(s === \"granted\")\r\n    const audio = await Camera.requestMicrophonePermissionsAsync().status\r\n    setAudioPermission(audio === \"granted\")\r\n}"]},"metadata":{},"sourceType":"module"}