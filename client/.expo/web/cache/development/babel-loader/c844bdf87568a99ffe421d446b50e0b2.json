{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PlusButton from \"../buttons/PlusButton\";\nimport AllOrSuggested from \"../layout/AllOrSuggested\";\nimport Date from \"../layout/Date\";\nimport EachTask from \"../listItems/tasks/EachTasks\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ModalDetailForActivity from \"../modal/modalDetailForActivity\";\nimport { useState } from \"react\";\nimport { FlatList } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar exampleArray = [{\n  id: 1,\n  task: \"Weeping\"\n}, {\n  id: 2,\n  task: \"Washing Dishes\"\n}, {\n  id: 3,\n  task: \"Preparing Meals\"\n}, {\n  id: 4,\n  task: \"Studying\"\n}];\nexport default function Index() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var handleShowModal = function handleShowModal(boo) {\n    boo ? setShowModal(true) : setShowModal(false);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(AllOrSuggested, {}), _jsx(Date, {}), _jsx(FlatList, {\n      data: exampleArray,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(EachTask, {\n          task: item.task,\n          i: item.id,\n          handleShowModal: handleShowModal\n        });\n      }\n    }), _jsx(PlusButton, {}), _jsx(Modal, {\n      visible: showModal,\n      presentationStyle: \"formSheet\",\n      animationType: \"slide\",\n      children: _jsx(ModalDetailForActivity, {\n        handleShowModal: handleShowModal\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/jjleo/Documents/WDMM/Term_4/Nimble/nimble-project/src/component/screens/TaskScreen.js"],"names":["PlusButton","AllOrSuggested","Date","EachTask","ModalDetailForActivity","useState","FlatList","exampleArray","id","task","Index","showModal","setShowModal","handleShowModal","boo","item"],"mappings":";AAAA,OAAOA,UAAP;AACA,OAAOC,cAAP;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;;AAEA,OAAOC,sBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;;AAGA,IAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAG,CADT;AAEIC,EAAAA,IAAI,EAAI;AAFZ,CADiB,EAKjB;AACID,EAAAA,EAAE,EAAG,CADT;AAEIC,EAAAA,IAAI,EAAG;AAFX,CALiB,EASjB;AACID,EAAAA,EAAE,EAAG,CADT;AAEIC,EAAAA,IAAI,EAAG;AAFX,CATiB,EAajB;AACID,EAAAA,EAAE,EAAG,CADT;AAEIC,EAAAA,IAAI,EAAG;AAFX,CAbiB,CAArB;AAmBA,eAAe,SAASC,KAAT,GAAgB;AAC3B,kBAAkCL,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAO;AAC3BA,IAAAA,GAAG,GAAGF,YAAY,CAAC,IAAD,CAAf,GAAwBA,YAAY,CAAC,KAAD,CAAvC;AACH,GAFD;;AAOA,SACI;AAAA,eACA,KAAC,cAAD,KADA,EAEA,KAAC,IAAD,KAFA,EAIA,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEL,YAAhB;AAA8B,MAAA,UAAU,EAAE;AAAA,YAAEQ,IAAF,QAAEA,IAAF;AAAA,eAAU,KAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAI,CAACN,IAArB;AAA2B,UAAA,CAAC,EAAEM,IAAI,CAACP,EAAnC;AAAuC,UAAA,eAAe,EAAEK;AAAxD,UAAV;AAAA;AAA1C,MAJA,EAOA,KAAC,UAAD,KAPA,EASA,KAAC,KAAD;AAAO,MAAA,OAAO,EAAEF,SAAhB;AAA2B,MAAA,iBAAiB,EAAC,WAA7C;AAAyD,MAAA,aAAa,EAAC,OAAvE;AAAA,gBACY,KAAC,sBAAD;AAAwB,QAAA,eAAe,EAAEE;AAAzC;AADZ,MATA;AAAA,IADJ;AAeH","sourcesContent":["import PlusButton from \"../buttons/PlusButton\";\r\nimport AllOrSuggested from \"../layout/AllOrSuggested\";\r\nimport Date from \"../layout/Date\";\r\nimport EachTask from \"../listItems/tasks/EachTasks\";\r\nimport {Modal} from \"react-native\"\r\nimport ModalDetailForActivity from \"../modal/modalDetailForActivity\";\r\nimport { useState } from \"react\";\r\nimport { FlatList } from \"native-base\";\r\n\r\n\r\nconst exampleArray = [\r\n    {\r\n        id : 1, \r\n        task  : \"Weeping\"\r\n    }, \r\n    {\r\n        id : 2,\r\n        task : \"Washing Dishes\",\r\n    },\r\n    {\r\n        id : 3,\r\n        task : \"Preparing Meals\"\r\n    },\r\n    {\r\n        id : 4,\r\n        task : \"Studying\"\r\n    }\r\n    ]\r\n\r\nexport default function Index(){\r\n    const [showModal, setShowModal] = useState(false)\r\n    const handleShowModal = (boo)=>{\r\n        boo ? setShowModal(true) : setShowModal(false)\r\n    }\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <>\r\n        <AllOrSuggested />\r\n        <Date />\r\n\r\n        <FlatList data={exampleArray} renderItem={({item})=><EachTask task={item.task} i={item.id} handleShowModal={handleShowModal} />}>\r\n\r\n        </FlatList>\r\n        <PlusButton />\r\n\r\n        <Modal visible={showModal} presentationStyle=\"formSheet\" animationType=\"slide\">\r\n                    <ModalDetailForActivity handleShowModal={handleShowModal}/>\r\n        </Modal>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}