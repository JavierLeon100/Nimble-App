{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Center, FormControl, Heading, HStack, Text, VStack, Input, Stack, Slider, Box, TextArea, ScrollView, Switch, Checkbox, Button } from \"native-base\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { useEffect, useState } from \"react\";\nimport { colors } from \"../utilis/colors\";\nimport { Gyroscope } from 'expo-sensors';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ModalDetailForActivity(_ref) {\n  var handleShowModal = _ref.handleShowModal;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sliderValue = _useState2[0],\n      setSliderValue = _useState2[1];\n\n  var _useState3 = useState({\n    x: 0,\n    y: 0,\n    z: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gyroValue = _useState4[0],\n      setGyroValue = _useState4[1];\n\n  var x = gyroValue.x,\n      y = gyroValue.y,\n      z = gyroValue.z;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      startGyro = _useState6[0],\n      setStartGyro = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sub = _useState8[0],\n      setSub = _useState8[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.formState.errors,\n      control = _useForm.control;\n\n  var onSubmit = function onSubmit(data) {\n    return alert(data);\n  };\n\n  var sliderOnChange = function sliderOnChange(v) {\n    setSliderValue(Math.floor(v));\n  };\n\n  var sliderOnChangeEnd = function sliderOnChangeEnd(v) {\n    setSliderValue(Math.floor(v));\n  };\n\n  var handleGyro = function handleGyro() {\n    return _regeneratorRuntime.async(function handleGyro$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Gyroscope.isAvailableAsync());\n\n          case 2:\n            if (!startGyro) {\n              Gyroscope.addListener(function (data) {\n                return setGyroValue(data);\n              });\n            } else {\n              Gyroscope.removeAllListeners();\n            }\n\n            Gyroscope.setUpdateInterval(2000);\n            setStartGyro(function (prev) {\n              return !prev;\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var roundNum = function roundNum(num) {\n    return Math.round(num * 100) / 100;\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsx(Center, {\n      children: _jsxs(VStack, {\n        w: \"100%\",\n        children: [_jsxs(HStack, {\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          mt: \"60\",\n          mb: \"30\",\n          children: [_jsx(Text, {\n            onPress: function onPress() {\n              return handleShowModal(false);\n            },\n            children: \"Cancel\"\n          }), _jsx(Heading, {\n            children: \"New Task\"\n          }), _jsx(Text, {\n            children: \"Save\"\n          })]\n        }), _jsx(Center, {\n          children: _jsx(FormControl, {\n            w: \"80%\",\n            children: _jsxs(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [_jsxs(Stack, {\n                mb: \"5\",\n                children: [_jsx(FormControl.Label, {\n                  children: \"Title\"\n                }), _jsx(Input, _objectSpread({\n                  p: 2,\n                  placeholder: \"Title\",\n                  borderRadius: \"10\"\n                }, register(\"title\")))]\n              }), _jsxs(VStack, {\n                mb: \"5\",\n                children: [_jsx(Text, {\n                  children: \"assign to\"\n                }), _jsxs(HStack, {\n                  space: \"2\",\n                  children: [_jsx(AntDesign, {\n                    name: \"user\",\n                    size: 24,\n                    color: \"black\"\n                  }), _jsx(AntDesign, {\n                    name: \"user\",\n                    size: 24,\n                    color: \"black\"\n                  }), _jsx(AntDesign, {\n                    name: \"user\",\n                    size: 24,\n                    color: \"black\"\n                  }), _jsx(AntDesign, {\n                    name: \"user\",\n                    size: 24,\n                    color: \"black\"\n                  })]\n                })]\n              }), _jsxs(Stack, {\n                mb: \"5\",\n                children: [_jsx(FormControl.Label, {\n                  children: \"Data/time\"\n                }), _jsx(Input, _objectSpread({\n                  p: 2,\n                  placeholder: \"Data/time\",\n                  borderRadius: \"10\"\n                }, register(\"date\")))]\n              }), _jsxs(VStack, {\n                mb: \"5\",\n                children: [_jsx(Text, {\n                  children: \"Assigned Points\"\n                }), _jsxs(Box, {\n                  bg: colors.gray,\n                  mt: \"3\",\n                  borderRadius: \"10\",\n                  p: \"5\",\n                  children: [_jsxs(Slider, {\n                    size: \"lg\",\n                    defaultValue: 0,\n                    onChange: sliderOnChange,\n                    onChangeEnd: sliderOnChangeEnd,\n                    children: [_jsx(Slider.Track, {\n                      children: _jsx(Slider.FilledTrack, {})\n                    }), _jsx(Slider.Thumb, {})]\n                  }), _jsxs(Text, {\n                    textAlign: \"center\",\n                    children: [\" \", sliderValue]\n                  })]\n                }), _jsx(Text, {\n                  mt: \"2\",\n                  fontSize: \"10\",\n                  children: \"Required Points\"\n                })]\n              }), _jsxs(VStack, {\n                mb: \"5\",\n                children: [_jsx(Text, {\n                  children: \"Attached Photos/Video\"\n                }), _jsxs(HStack, {\n                  justifyContent: \"space-around\",\n                  mt: \"3\",\n                  children: [_jsx(AntDesign, {\n                    name: \"picture\",\n                    size: 70,\n                    color: \"black\"\n                  }), _jsx(AntDesign, {\n                    name: \"picture\",\n                    size: 70,\n                    color: \"black\"\n                  }), _jsx(AntDesign, {\n                    name: \"picture\",\n                    size: 70,\n                    color: \"black\"\n                  })]\n                })]\n              }), _jsxs(Stack, {\n                mb: \"5\",\n                children: [_jsx(FormControl.Label, {\n                  children: \"Notes\"\n                }), _jsx(TextArea, _objectSpread({\n                  p: 2,\n                  placeholder: \"Data/time\",\n                  borderRadius: \"10\",\n                  height: \"150\"\n                }, register(\"notes\")))]\n              }), _jsxs(VStack, {\n                mb: \"5\",\n                children: [_jsxs(HStack, {\n                  justifyContent: \"space-between\",\n                  alignContent: \"center\",\n                  mb: \"4\",\n                  children: [_jsx(Text, {\n                    children: \"Timer\"\n                  }), _jsx(Switch, {\n                    size: \"lg\"\n                  })]\n                }), _jsxs(HStack, {\n                  justifyContent: \"space-between\",\n                  alignContent: \"center\",\n                  mb: \"4\",\n                  children: [_jsx(Text, {\n                    children: \"Timer\"\n                  }), _jsx(Switch, {\n                    size: \"lg\"\n                  })]\n                })]\n              }), _jsxs(VStack, {\n                mb: \"5\",\n                children: [_jsxs(HStack, {\n                  justifyContent: \"space-between\",\n                  alignContent: \"center\",\n                  mb: \"4\",\n                  children: [_jsx(Text, {\n                    children: \"Focus Mode\"\n                  }), _jsx(Switch, {\n                    size: \"lg\",\n                    onToggle: handleGyro,\n                    isChecked: startGyro\n                  }), _jsx(Text, {\n                    children: roundNum(x) + \", \" + roundNum(y) + \", \" + roundNum(z)\n                  })]\n                }), _jsxs(HStack, {\n                  justifyContent: \"space-between\",\n                  alignContent: \"center\",\n                  mb: \"4\",\n                  children: [_jsx(Text, {\n                    children: \"Recorded Brightness \"\n                  }), _jsx(Checkbox, {\n                    size: \"lg\"\n                  })]\n                }), _jsxs(HStack, {\n                  justifyContent: \"space-between\",\n                  alignContent: \"center\",\n                  mb: \"4\",\n                  children: [_jsx(Text, {\n                    children: \"Recorded Device Motion \"\n                  }), _jsx(Checkbox, {\n                    size: \"lg\"\n                  })]\n                })]\n              }), _jsxs(VStack, {\n                space: \"6\",\n                mb: \"70\",\n                children: [_jsx(Button, {\n                  p: \"5\",\n                  borderRadius: \"10\",\n                  onPress: handleSubmit(onSubmit),\n                  children: \"Save\"\n                }), _jsx(Center, {\n                  children: _jsx(Button, {\n                    w: \"80%\",\n                    p: \"4\",\n                    borderRadius: \"10\",\n                    onPress: function onPress() {\n                      return handleShowModal(false);\n                    },\n                    children: \"Cancel/Delete\"\n                  })\n                })]\n              })]\n            })\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/appea/OneDrive/デスクトップ/nimble/nimble-sono2/client/src/component/modal/modalDetailForActivity.js"],"names":["Center","FormControl","Heading","HStack","Text","VStack","Input","Stack","Slider","Box","TextArea","ScrollView","Switch","Checkbox","Button","AntDesign","useEffect","useState","colors","Gyroscope","useForm","Controller","ModalDetailForActivity","handleShowModal","sliderValue","setSliderValue","x","y","z","gyroValue","setGyroValue","startGyro","setStartGyro","sub","setSub","register","handleSubmit","watch","errors","formState","control","onSubmit","data","alert","sliderOnChange","v","Math","floor","sliderOnChangeEnd","handleGyro","isAvailableAsync","addListener","removeAllListeners","setUpdateInterval","prev","roundNum","num","round","gray"],"mappings":"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","sourcesContent":["import { Center, FormControl, Heading, HStack, Text, VStack, Input, Stack, Slider, Box, TextArea, ScrollView, Switch, Checkbox, Button } from \"native-base\";\nimport { AntDesign } from '@expo/vector-icons'; \nimport { useEffect, useState } from \"react\";\nimport { colors } from \"../utilis/colors\";\nimport { Gyroscope } from 'expo-sensors';\nimport { useForm, Controller } from \"react-hook-form\";\n\n\nexport default function ModalDetailForActivity({handleShowModal}){\n    const [sliderValue, setSliderValue] = useState(0)\n    const [gyroValue, setGyroValue] = useState({\n        x : 0,\n        y : 0,\n        z : 0,\n    })\n    const {x, y, z} = gyroValue\n    const [startGyro, setStartGyro] = useState(false)\n    const [sub, setSub] = useState(null)\n    const { register, handleSubmit, watch, formState: { errors }, control } = useForm();\n    const onSubmit = data => alert(data);\n\n    const sliderOnChange = (v)=>{\n            setSliderValue(Math.floor(v))\n    }\n\n    const sliderOnChangeEnd = (v)=>{\n        setSliderValue(Math.floor(v))\n    }\n\n    const handleGyro = async ()=>{\n        await Gyroscope.isAvailableAsync()\n        if(!startGyro){\n            Gyroscope.addListener(data=>setGyroValue(data))\n        } else {\n            Gyroscope.removeAllListeners()\n        }\n        Gyroscope.setUpdateInterval(2000)\n        setStartGyro(prev=>!prev)\n        \n        \n    }\n\n\n    const roundNum = (num)=>{\n        \n        return Math.round(num * 100) / 100\n    }\n\n    return (\n    <ScrollView>\n        <Center>\n            <VStack w=\"100%\">\n            <HStack alignItems=\"center\" justifyContent=\"space-around\" mt=\"60\" mb=\"30\">\n                <Text onPress={()=>handleShowModal(false)}>Cancel</Text>\n                <Heading>New Task</Heading>\n                <Text>Save</Text>\n            </HStack>\n\n            <Center>\n                <FormControl w=\"80%\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Stack mb=\"5\">\n                        <FormControl.Label>Title</FormControl.Label>\n                        <Input p={2} placeholder=\"Title\" borderRadius=\"10\" {...register(\"title\")}/>\n                    </Stack>\n\n                    <VStack mb=\"5\">\n                        <Text>assign to</Text>\n                        <HStack space=\"2\">\n                        <AntDesign name=\"user\" size={24} color=\"black\" />\n                        <AntDesign name=\"user\" size={24} color=\"black\" />\n                        <AntDesign name=\"user\" size={24} color=\"black\" />\n                        <AntDesign name=\"user\" size={24} color=\"black\" />\n                        </HStack>\n                    </VStack>\n\n                    <Stack mb=\"5\">\n                        <FormControl.Label>Data/time</FormControl.Label>\n                        <Input p={2} placeholder=\"Data/time\"  borderRadius=\"10\" {...register(\"date\")}/>\n                    </Stack>\n\n                    <VStack mb=\"5\">\n                        <Text>Assigned Points</Text>\n                        <Box bg={colors.gray}  mt=\"3\"  borderRadius=\"10\" p=\"5\">\n                            <Slider size=\"lg\" defaultValue={0} onChange={sliderOnChange} onChangeEnd={sliderOnChangeEnd}>\n                            <Slider.Track>\n                                <Slider.FilledTrack />\n                            </Slider.Track>\n                            <Slider.Thumb />\n                            </Slider>\n                            <Text textAlign=\"center\"> {sliderValue}</Text>\n                        </Box>\n                        <Text mt=\"2\" fontSize=\"10\">Required Points</Text>\n                    </VStack>\n\n                    <VStack  mb=\"5\">\n                    <Text>Attached Photos/Video</Text>\n                    <HStack justifyContent=\"space-around\" mt=\"3\">\n                        <AntDesign name=\"picture\" size={70} color=\"black\" />\n                        <AntDesign name=\"picture\" size={70} color=\"black\" />\n                        <AntDesign name=\"picture\" size={70} color=\"black\" />\n                    </HStack>\n                    </VStack>\n\n                    <Stack mb=\"5\">\n                        <FormControl.Label>Notes</FormControl.Label>\n                        <TextArea p={2} placeholder=\"Data/time\" borderRadius=\"10\" height=\"150\" {...register(\"notes\")}/>\n                    </Stack>\n\n                    <VStack mb=\"5\">\n                        <HStack justifyContent=\"space-between\" alignContent=\"center\" mb=\"4\">\n                            <Text>Timer</Text>\n                        <Switch  size=\"lg\"/>\n                        </HStack>\n\n                        <HStack  justifyContent=\"space-between\" alignContent=\"center\" mb=\"4\">\n                            <Text>Timer</Text>\n                        <Switch  size=\"lg\"/>\n                        </HStack>\n                    </VStack>\n\n                    <VStack mb=\"5\">\n                        <HStack justifyContent=\"space-between\" alignContent=\"center\" mb=\"4\">\n                        <Text>Focus Mode</Text>\n                        <Switch size=\"lg\" onToggle={handleGyro} isChecked={startGyro} />\n                        <Text>{`${roundNum(x)}, ${roundNum(y)}, ${roundNum(z)}`}</Text>\n                        </HStack>\n\n                        <HStack justifyContent=\"space-between\" alignContent=\"center\" mb=\"4\">\n                        <Text>Recorded Brightness </Text>\n                        <Checkbox size=\"lg\" />\n                        </HStack>\n\n                        <HStack justifyContent=\"space-between\" alignContent=\"center\" mb=\"4\">\n                        <Text>Recorded Device Motion </Text>\n                        <Checkbox size=\"lg\" />\n                        </HStack>\n                    </VStack>\n\n                    <VStack space=\"6\" mb=\"70\">                    \n                    <Button p=\"5\" borderRadius=\"10\" onPress={handleSubmit(onSubmit)}>Save</Button>\n                    <Center>\n                    <Button w=\"80%\" p=\"4\" borderRadius=\"10\" onPress={()=>handleShowModal(false)} >Cancel/Delete</Button>\n                    </Center>\n                    </VStack>\n                </form>\n                </FormControl>\n            </Center>\n            </VStack>\n        </Center>\n    </ScrollView>\n    )\n}"]},"metadata":{},"sourceType":"module"}