{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { PermissionStatus, EventEmitter, Platform } from 'expo-modules-core';\n\nvar DeviceSensor = _createClass(function DeviceSensor(nativeSensorModule, nativeEventName) {\n  var _this = this;\n\n  _classCallCheck(this, DeviceSensor);\n\n  this.addListener = function (listener) {\n    var subscription = _this._nativeEmitter.addListener(_this._nativeEventName, listener);\n\n    subscription.remove = function () {\n      return _this.removeSubscription(subscription);\n    };\n\n    _this._listenerCount++;\n    return subscription;\n  };\n\n  this.hasListeners = function () {\n    return _this._listenerCount > 0;\n  };\n\n  this.getListenerCount = function () {\n    return _this._listenerCount;\n  };\n\n  this.removeAllListeners = function () {\n    _this._listenerCount = 0;\n\n    _this._nativeEmitter.removeAllListeners(_this._nativeEventName);\n  };\n\n  this.removeSubscription = function (subscription) {\n    _this._listenerCount--;\n\n    _this._nativeEmitter.removeSubscription(subscription);\n  };\n\n  this.setUpdateInterval = function (intervalMs) {\n    if (!_this._nativeModule.setUpdateInterval) {\n      console.warn(\"expo-sensors: setUpdateInterval() is not supported on \" + Platform.OS);\n    } else {\n      _this._nativeModule.setUpdateInterval(intervalMs);\n    }\n  };\n\n  this.isAvailableAsync = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (_this._nativeModule.isAvailableAsync) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(_this._nativeModule.isAvailableAsync());\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  this.getPermissionsAsync = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_this._nativeModule.getPermissionsAsync) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", defaultPermissionsResponse);\n\n          case 4:\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(_this._nativeModule.getPermissionsAsync());\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  this.requestPermissionsAsync = function _callee3() {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (_this._nativeModule.requestPermissionsAsync) {\n              _context3.next = 4;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", defaultPermissionsResponse);\n\n          case 4:\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(_this._nativeModule.requestPermissionsAsync());\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  this._nativeModule = nativeSensorModule;\n  this._nativeEmitter = new EventEmitter(nativeSensorModule);\n  this._nativeEventName = nativeEventName;\n  this._listenerCount = 0;\n});\n\nexport { DeviceSensor as default };\nvar defaultPermissionsResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED\n};","map":{"version":3,"sources":["../src/DeviceSensor.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PermissionResponse,\n  PermissionStatus,\n  EventEmitter,\n  Subscription,\n  Platform,\n} from 'expo-modules-core';\n\ntype Listener<E> = (event: E) => void;\n\ntype NativeSensorModule = any;\n\n/**\n * A base class for subscribable sensors. The events emitted by this class are measurements\n * specified by the parameter type `M`.\n */\nexport default class DeviceSensor<M> {\n  _nativeModule: NativeSensorModule;\n  _nativeEmitter: EventEmitter;\n  _nativeEventName: string;\n  _listenerCount: number;\n\n  constructor(nativeSensorModule: NativeSensorModule, nativeEventName: string) {\n    this._nativeModule = nativeSensorModule;\n\n    this._nativeEmitter = new EventEmitter(nativeSensorModule);\n    this._nativeEventName = nativeEventName;\n    this._listenerCount = 0;\n  }\n\n  addListener = (listener: Listener<M>): Subscription => {\n    const subscription = this._nativeEmitter.addListener(this._nativeEventName, listener);\n    subscription.remove = () => this.removeSubscription(subscription);\n    this._listenerCount++;\n    return subscription;\n  };\n\n  hasListeners = (): boolean => {\n    return this._listenerCount > 0;\n  };\n\n  getListenerCount = (): number => {\n    return this._listenerCount;\n  };\n\n  removeAllListeners = (): void => {\n    this._listenerCount = 0;\n    this._nativeEmitter.removeAllListeners(this._nativeEventName);\n  };\n\n  removeSubscription = (subscription: Subscription): void => {\n    this._listenerCount--;\n    this._nativeEmitter.removeSubscription(subscription);\n  };\n\n  setUpdateInterval = (intervalMs: number): void => {\n    if (!this._nativeModule.setUpdateInterval) {\n      console.warn(`expo-sensors: setUpdateInterval() is not supported on ${Platform.OS}`);\n    } else {\n      this._nativeModule.setUpdateInterval(intervalMs);\n    }\n  };\n\n  isAvailableAsync = async (): Promise<boolean> => {\n    if (!this._nativeModule.isAvailableAsync) {\n      return false;\n    } else {\n      return await this._nativeModule.isAvailableAsync();\n    }\n  };\n\n  getPermissionsAsync = async (): Promise<PermissionResponse> => {\n    if (!this._nativeModule.getPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return await this._nativeModule.getPermissionsAsync();\n    }\n  };\n\n  requestPermissionsAsync = async (): Promise<PermissionResponse> => {\n    if (!this._nativeModule.requestPermissionsAsync) {\n      return defaultPermissionsResponse;\n    } else {\n      return await this._nativeModule.requestPermissionsAsync();\n    }\n  };\n}\n\nconst defaultPermissionsResponse: PermissionResponse = {\n  granted: true,\n  expires: 'never',\n  canAskAgain: true,\n  status: PermissionStatus.GRANTED,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}