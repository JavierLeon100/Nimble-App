{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/core';\nimport { app, auth } from \"../../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\napp();\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate('Index');\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    var auth = getAuth();\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Registered with: ', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    var auth = getAuth();\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with: ', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.button,\n          children: \"Log in\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/rachel/Desktop/NIMBLE-APP/client/src/component/screens/LoginScreen.js"],"names":["React","useState","useEffect","useNavigation","app","auth","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","navigate","handleSignUp","getAuth","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","handleLogin","signInWithEmailAndPassword","styles","container","inputContainer","text","input","buttonContainer","button","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","buttonText","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\n// import { auth } from '../../../firebase';\nimport {useNavigation} from '@react-navigation/core'\n// import { getAuth } from 'firebase/auth';\n// import {initializeApp} from \"firebase/app\"\nimport {app, auth} from '../../../firebase'\n\napp()\nconst LoginScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  useEffect(()=>{\n  const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        navigation.navigate('Index')\n      }\n    })\n\n    return unsubscribe\n  }, [])\n\n\n  const handleSignUp = () => {\n    const auth = getAuth()\n    auth\n    .createUserWithEmailAndPassword(email, password)\n    .then(userCredentials => {\n      const user = userCredentials.user; \n      console.log('Registered with: ', user.email);\n    })\n    .catch(error => alert(error.message))\n  }\n\n  const handleLogin = () => {\n    const auth = getAuth()\n    auth\n    .signInWithEmailAndPassword(email, password)\n    .then(userCredentials => {\n      const user = userCredentials.user; \n      console.log('Logged in with: ', user.email);\n    })\n    .catch(error => alert(error.message))\n  }\n\n  return (\n\n    <KeyboardAvoidingView\n    style={styles.container}\n    behavior=\"padding\">\n\n      <View style={styles.inputContainer}>\n          <TextInput  placeholder='Email'\n          value={email}\n          onChangeText={text => setEmail(text)}\n          style={styles.input}\n            />\n\n        <TextInput  placeholder='Password'\n          value={password}\n          onChangeText={text => setPassword(text)}\n          style={styles.input}\n          secureTextEntry\n        />\n\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity \n        onPress={handleLogin}\n        style={styles.button} >\n\n          <Text style={styles.button}>Log in</Text>\n\n        </TouchableOpacity>\n\n\n        <TouchableOpacity\n         onPress={handleSignUp}\n        style={[styles.button, styles.buttonOutline]} >\n\n          <Text style={styles.buttonOutlineText}>Register</Text>\n\n        </TouchableOpacity>\n        </View>\n\n    </KeyboardAvoidingView>\n\n\n  )\n}\n\nexport default LoginScreen;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: '#0782F9',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n});\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}