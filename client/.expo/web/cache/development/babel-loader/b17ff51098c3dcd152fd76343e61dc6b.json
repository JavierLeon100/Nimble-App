{"ast":null,"code":"import { Center, FormControl, Heading, HStack, ScrollView, StatusBar, Text, VStack, Input, Stack, Button, Box, Flex, FlatList, Pressable } from \"native-base\";\nimport { Link } from \"react-native-web/dist/index\";\nimport { colors } from \"../utilis/colors\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { FlatGrid } from \"react-native-super-grid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function EditChildProfile(_ref) {\n  var showModal = _ref.showModal,\n      changeMode = _ref.changeMode;\n\n  var badgeIocn = _jsx(AntDesign, {\n    name: \"Trophy\",\n    size: 40,\n    color: \"black\"\n  });\n\n  var badgeName = _jsx(Text, {\n    w: \"90\",\n    ml: \"10\",\n    children: \"Badged name is here\"\n  });\n\n  var exampleArray = [{\n    icon: badgeIocn,\n    Button: badgeName\n  }, {\n    icon: badgeIocn,\n    Button: badgeName\n  }, {\n    icon: badgeIocn,\n    Button: badgeName\n  }, {\n    icon: badgeIocn,\n    Button: badgeName\n  }];\n\n  var header = function header() {\n    return _jsxs(_Fragment, {\n      children: [_jsx(VStack, {\n        safeArea: true,\n        mt: \"5\",\n        children: _jsxs(HStack, {\n          w: \"100%\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\",\n          children: [_jsx(Pressable, {\n            onPress: changeMode,\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"less-than\",\n              size: 24,\n              color: \"black\"\n            })\n          }), _jsx(Heading, {\n            children: \"Profile\"\n          }), _jsx(FontAwesome5, {\n            name: \"edit\",\n            size: 24,\n            color: \"black\"\n          })]\n        })\n      }), _jsxs(Center, {\n        mt: \"5\",\n        children: [_jsx(AntDesign, {\n          name: \"user\",\n          size: 50,\n          color: \"black\"\n        }), _jsx(Text, {\n          mt: \"3\",\n          children: \"Level 10\"\n        })]\n      }), _jsx(FormControl, {\n        w: \"100%\",\n        mt: \"4\",\n        children: _jsx(Center, {\n          children: _jsxs(HStack, {\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n            children: [_jsx(FormControl.Label, {\n              children: _jsx(Text, {\n                fontSize: \"18\",\n                mr: \"3\",\n                children: \"Name\"\n              })\n            }), _jsx(Input, {\n              placeholder: \"Name\",\n              w: \"60%\",\n              p: \"6\"\n            })]\n          })\n        })\n      }), _jsx(FormControl, {\n        w: \"100%\",\n        mt: \"4\",\n        children: _jsx(Center, {\n          children: _jsxs(HStack, {\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n            children: [_jsx(FormControl.Label, {\n              children: _jsx(Text, {\n                fontSize: \"18\",\n                mr: \"3\",\n                children: \"Birthday\"\n              })\n            }), _jsx(Input, {\n              placeholder: \"Birthday\",\n              w: \"60%\",\n              p: \"6\"\n            })]\n          })\n        })\n      }), _jsx(Text, {\n        fontWeight: \"bold\",\n        fontSize: \"lg\",\n        textAlign: \"center\",\n        my: \"7\",\n        children: \"Badges unlocked\"\n      })]\n    });\n  };\n\n  var footer = function footer() {\n    return _jsx(_Fragment, {\n      children: _jsxs(Center, {\n        mb: \"20\",\n        children: [_jsx(Text, {\n          fontWeight: \"bold\",\n          fontSize: \"lg\",\n          textAlign: \"center\",\n          children: \"Stats\"\n        }), _jsxs(HStack, {\n          justifyContent: \"space-around\",\n          w: \"100%\",\n          children: [_jsx(Text, {\n            fontSize: \"16\",\n            children: \"Current Week\"\n          }), _jsx(Text, {\n            fontSize: \"16\",\n            children: \"Current Month\"\n          })]\n        }), _jsxs(HStack, {\n          textAlign: \"center\",\n          children: [_jsxs(VStack, {\n            p: \"5\",\n            children: [_jsx(Text, {\n              p: \"2\",\n              children: \"Task completed:  10/25\"\n            }), _jsx(Text, {\n              p: \"2\",\n              children: \"Rewards redeemed:  5/8\"\n            })]\n          }), _jsxs(VStack, {\n            p: \"5\",\n            children: [_jsx(Text, {\n              p: \"2\",\n              children: \"Task completed:  10/25\"\n            }), _jsx(Text, {\n              p: \"2\",\n              children: \"Rewards redeemed:  5/8\"\n            })]\n          })]\n        }), _jsx(Button, {\n          bg: colors.black,\n          h: \"20\",\n          w: \"80\",\n          borderRadius: \"10\",\n          onPress: showModal,\n          children: \"Close\"\n        })]\n      })\n    });\n  };\n\n  return _jsx(FlatGrid, {\n    ListHeaderComponent: header,\n    ListFooterComponent: footer,\n    itemDimension: 180,\n    spacing: 18,\n    data: exampleArray,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _jsx(Center, {\n        children: _jsxs(HStack, {\n          justifyContent: \"space-around\",\n          p: \"3\",\n          w: \"150\",\n          children: [item.icon, item.Button]\n        })\n      });\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/jjleo/Documents/WDMM/Term_4/Nimble/nimble-project/client/src/component/modal/editChildProfile.js"],"names":["Center","FormControl","Heading","HStack","ScrollView","StatusBar","Text","VStack","Input","Stack","Button","Box","Flex","FlatList","Pressable","Link","colors","FontAwesome5","MaterialCommunityIcons","AntDesign","FlatGrid","EditChildProfile","showModal","changeMode","badgeIocn","badgeName","exampleArray","icon","header","footer","black","item"],"mappings":"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","sourcesContent":["\r\nimport { Center, FormControl,  Heading,  HStack,  ScrollView, StatusBar, Text, VStack, Input, Stack, Button, Box, Flex, FlatList, Pressable} from \"native-base\"\r\nimport {Link} from \"react-native\"\r\nimport { colors } from \"../utilis/colors\"\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { FlatGrid } from \"react-native-super-grid\";\r\n\r\nexport default function EditChildProfile({showModal, changeMode}){\r\n\r\n    const badgeIocn = <AntDesign name=\"Trophy\" size={40} color=\"black\" />\r\n    const badgeName = <Text w=\"90\" ml=\"10\">Badged name is here</Text>\r\n\r\n    const exampleArray = [\r\n        {\r\n            icon : badgeIocn,\r\n            Button : badgeName\r\n        },\r\n        {\r\n            icon : badgeIocn,\r\n            Button : badgeName\r\n        },\r\n        {\r\n            icon : badgeIocn,\r\n            Button : badgeName\r\n        },\r\n        {\r\n            icon : badgeIocn,\r\n            Button : badgeName\r\n        }\r\n    ]\r\n\r\n    const header = ()=>(\r\n        <>\r\n        <VStack safeArea mt=\"5\">     \r\n        <HStack w=\"100%\" justifyContent=\"space-around\" alignItems=\"center\">\r\n            <Pressable onPress={changeMode}>\r\n            <MaterialCommunityIcons name=\"less-than\" size={24} color=\"black\" />\r\n            </Pressable>\r\n            <Heading>Profile</Heading>\r\n            <FontAwesome5 name=\"edit\" size={24} color=\"black\"/>\r\n        </HStack>  \r\n        </VStack>\r\n\r\n        <Center mt=\"5\">\r\n                <AntDesign name=\"user\" size={50} color=\"black\" />\r\n                <Text mt=\"3\">Level 10</Text>\r\n        </Center>\r\n\r\n            <FormControl w=\"100%\" mt=\"4\">\r\n            <Center>\r\n                <HStack alignItems=\"center\" justifyContent=\"space-around\">\r\n                    <FormControl.Label>\r\n                        <Text fontSize=\"18\" mr=\"3\">Name</Text>\r\n                    </FormControl.Label>\r\n                    <Input placeholder=\"Name\" w=\"60%\" p=\"6\"/> \r\n                </HStack>\r\n            </Center>\r\n            </FormControl>\r\n\r\n            <FormControl w=\"100%\" mt=\"4\">\r\n            <Center>\r\n                <HStack alignItems=\"center\" justifyContent=\"space-around\">\r\n                    <FormControl.Label>\r\n                        <Text fontSize=\"18\" mr=\"3\">Birthday</Text>\r\n                    </FormControl.Label>\r\n                    <Input placeholder=\"Birthday\" w=\"60%\" p=\"6\"/> \r\n                </HStack>\r\n            </Center>\r\n            </FormControl>\r\n            <Text fontWeight=\"bold\" fontSize=\"lg\" textAlign=\"center\" my=\"7\">Badges unlocked</Text>\r\n    </>)\r\n\r\n    const footer =()=>(\r\n        <>\r\n        <Center mb=\"20\">\r\n            <Text fontWeight=\"bold\" fontSize=\"lg\" textAlign=\"center\">Stats</Text>\r\n            <HStack justifyContent=\"space-around\" w=\"100%\">\r\n                <Text fontSize=\"16\">Current Week</Text>\r\n                <Text fontSize=\"16\">Current Month</Text>\r\n            </HStack>\r\n\r\n            <HStack textAlign=\"center\">\r\n                <VStack p=\"5\">\r\n                    <Text p=\"2\">Task completed:  10/25</Text>\r\n                    <Text p=\"2\">Rewards redeemed:  5/8</Text>\r\n                </VStack>\r\n\r\n                <VStack p=\"5\">\r\n                    <Text p=\"2\">Task completed:  10/25</Text>\r\n                    <Text p=\"2\">Rewards redeemed:  5/8</Text>\r\n                </VStack>\r\n            </HStack>\r\n\r\n        \r\n            <Button bg={colors.black} h=\"20\" w=\"80\" borderRadius=\"10\" onPress={showModal}>Close</Button>\r\n        </Center>\r\n    </>\r\n    )\r\n\r\n    return (\r\n            \r\n\r\n                \r\n                    \r\n                        <FlatGrid \r\n                        ListHeaderComponent={header}\r\n                        ListFooterComponent={footer}\r\n                        itemDimension={180}\r\n                        spacing={18}\r\n                        data={exampleArray}\r\n                        renderItem={\r\n                            ({item})=>(\r\n                                <Center>\r\n                                    <HStack justifyContent=\"space-around\" p=\"3\" w=\"150\">\r\n                                    {item.icon}\r\n                                    {item.Button}\r\n                                    </HStack>\r\n                                </Center>\r\n                            )\r\n                        }\r\n                        />\r\n\r\n                    \r\n                \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}