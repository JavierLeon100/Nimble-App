{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Center, FormControl, Heading, HStack, Text, VStack, Input, Stack, Slider, Box, TextArea, ScrollView, Button, Image } from \"native-base\";\nimport { useRef, useState } from \"react\";\nimport { colors } from \"../utilis/colors\";\nimport * as ImagePicker from 'expo-image-picker';\nimport RecordVideo from \"../layout/recordVideo\";\nimport { Video } from \"expo-av\";\nimport { Camera } from \"expo-camera\";\nimport { pickImage, takePhoto } from \"../utilis/camera/pickAndTakePic\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ModalForAddRewards(_ref) {\n  var handleShowModal = _ref.handleShowModal;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      video = _useState4[0],\n      setVideo = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      onRecording = _useState6[0],\n      setOnRecording = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      stopRec = _useState8[0],\n      setStopRec = _useState8[1];\n\n  var videoRef = useRef(null);\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sliderValue = _useState10[0],\n      setSliderValue = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cameraPermission = _useState12[0],\n      setCameraPermission = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      recordVideoPermission = _useState14[0],\n      setRecordVideoPermission = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      audioPermission = _useState16[0],\n      setAudioPermission = _useState16[1];\n\n  var sliderOnChange = function sliderOnChange(v) {\n    setSliderValue(Math.floor(v));\n  };\n\n  var sliderOnChangeEnd = function sliderOnChangeEnd(v) {\n    setSliderValue(Math.floor(v));\n  };\n\n  var startRecordVideo = function startRecordVideo() {\n    var _await$videoRef$curre, uri;\n\n    return _regeneratorRuntime.async(function startRecordVideo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(videoRef.current.recordAsync({\n              quality: '1080p'\n            }));\n\n          case 3:\n            _await$videoRef$curre = _context.sent;\n            uri = _await$videoRef$curre.uri;\n            alert(uri);\n            setVideo(uri);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var stopRecordVideo = function stopRecordVideo() {\n    var stopRec = videoRef.current.stopRecording();\n  };\n\n  var closeVideoRecording = function closeVideoRecording() {\n    setOnRecording(false);\n  };\n\n  return _jsx(_Fragment, {\n    children: onRecording ? _jsx(RecordVideo, {\n      start: startRecordVideo,\n      videoRef: videoRef,\n      stop: stopRecordVideo,\n      close: closeVideoRecording\n    }) : _jsx(ScrollView, {\n      children: _jsx(Center, {\n        children: _jsxs(VStack, {\n          w: \"100%\",\n          children: [_jsxs(HStack, {\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n            mt: \"60\",\n            mb: \"30\",\n            children: [_jsx(Text, {\n              onPress: function onPress() {\n                return handleShowModal(false);\n              },\n              children: \"Cancel\"\n            }), _jsx(Heading, {\n              children: \"Add Rewards\"\n            }), _jsx(Text, {\n              children: \"Save\"\n            })]\n          }), _jsx(Center, {\n            children: _jsxs(FormControl, {\n              w: \"80%\",\n              children: [_jsxs(Stack, {\n                mb: \"5\",\n                children: [_jsx(FormControl.Label, {\n                  children: \"Title\"\n                }), _jsx(Input, {\n                  p: 2,\n                  placeholder: \"Title\",\n                  borderRadius: \"10\"\n                })]\n              }), _jsxs(Stack, {\n                mb: \"5\",\n                children: [_jsx(FormControl.Label, {\n                  children: \"URL/Link\"\n                }), _jsx(Input, {\n                  p: 2,\n                  placeholder: \"URL/Link\",\n                  borderRadius: \"10\"\n                })]\n              }), _jsxs(VStack, {\n                mb: \"5\",\n                children: [_jsx(Text, {\n                  children: \"Points\"\n                }), _jsxs(Box, {\n                  bg: colors.gray,\n                  mt: \"3\",\n                  borderRadius: \"10\",\n                  p: \"5\",\n                  children: [_jsxs(Slider, {\n                    size: \"lg\",\n                    defaultValue: 0,\n                    onChange: sliderOnChange,\n                    onChangeEnd: sliderOnChangeEnd,\n                    videoRef: videoRef,\n                    children: [_jsx(Slider.Track, {\n                      children: _jsx(Slider.FilledTrack, {})\n                    }), _jsx(Slider.Thumb, {})]\n                  }), _jsxs(Text, {\n                    textAlign: \"center\",\n                    children: [\" \", sliderValue]\n                  })]\n                }), _jsx(Text, {\n                  mt: \"2\",\n                  fontSize: \"10\",\n                  children: \"Required Points\"\n                })]\n              }), _jsxs(VStack, {\n                mb: \"5\",\n                children: [_jsx(Text, {\n                  children: \"Attached Photos/Video\"\n                }), image ? _jsx(Image, {\n                  source: {\n                    uri: image\n                  },\n                  style: {\n                    width: 200,\n                    height: 200\n                  },\n                  alt: \"image\"\n                }) : null, video ? _jsx(Video, {\n                  style: {\n                    width: 200,\n                    height: 200\n                  },\n                  source: {\n                    uri: video\n                  },\n                  useNativeControls: true,\n                  resizeMode: \"contain\"\n                }) : null, _jsx(Button, {\n                  onPress: function onPress() {\n                    return takePhoto(setCameraPermission, setAudioPermission, setRecordVideoPermission);\n                  },\n                  mb: \"2\",\n                  children: \"take an  image\"\n                }), _jsx(Button, {\n                  onPress: function onPress() {\n                    return setOnRecording(true);\n                  },\n                  mb: \"2\",\n                  children: \"record a video\"\n                }), _jsx(Button, {\n                  onPress: pickImage,\n                  children: \"Pic image\"\n                }), _jsx(Button, {\n                  onPress: function onPress() {\n                    return alert(video);\n                  },\n                  children: \"see url\"\n                })]\n              }), _jsxs(Stack, {\n                mb: \"5\",\n                children: [_jsx(FormControl.Label, {\n                  children: \"Notes\"\n                }), _jsx(TextArea, {\n                  p: 2,\n                  placeholder: \"Instruction, Guide, Help...\",\n                  borderRadius: \"10\",\n                  height: \"150\"\n                })]\n              }), _jsxs(VStack, {\n                space: \"6\",\n                mb: \"70\",\n                children: [_jsx(Button, {\n                  p: \"5\",\n                  borderRadius: \"10\",\n                  children: \"Save\"\n                }), _jsx(Center, {\n                  children: _jsx(Button, {\n                    w: \"80%\",\n                    p: \"4\",\n                    borderRadius: \"10\",\n                    onPress: function onPress() {\n                      return handleShowModal(false);\n                    },\n                    children: \"Cancel/Delete\"\n                  })\n                })]\n              })]\n            })\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/appea/OneDrive/デスクトップ/nimble/nimble-sono2/client/src/component/modal/modalForAddRewards.js"],"names":["Center","FormControl","Heading","HStack","Text","VStack","Input","Stack","Slider","Box","TextArea","ScrollView","Button","Image","useRef","useState","colors","ImagePicker","RecordVideo","Video","Camera","pickImage","takePhoto","ModalForAddRewards","handleShowModal","image","setImage","video","setVideo","onRecording","setOnRecording","stopRec","setStopRec","videoRef","sliderValue","setSliderValue","cameraPermission","setCameraPermission","recordVideoPermission","setRecordVideoPermission","audioPermission","setAudioPermission","sliderOnChange","v","Math","floor","sliderOnChangeEnd","startRecordVideo","current","recordAsync","quality","uri","alert","stopRecordVideo","stopRecording","closeVideoRecording","gray","width","height"],"mappings":"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","sourcesContent":["import { Center, FormControl, Heading, HStack, Text, VStack, Input, Stack, Slider, Box, TextArea, ScrollView, Button, Image} from \"native-base\";\nimport { useRef, useState } from \"react\";\nimport { colors } from \"../utilis/colors\";\nimport * as ImagePicker from 'expo-image-picker';\nimport RecordVideo from \"../layout/recordVideo\";\nimport { Video } from \"expo-av\";\nimport { Camera } from \"expo-camera\";\nimport { pickImage, takePhoto } from \"../utilis/camera/pickAndTakePic\";\n\nexport default function ModalForAddRewards({handleShowModal}){\n    const [image, setImage] = useState();\n    const [video, setVideo] = useState()\n    const [onRecording, setOnRecording] = useState(false)\n    const [stopRec, setStopRec] = useState(false)\n    const videoRef = useRef(null)\n    const [sliderValue, setSliderValue] = useState(0)\n\n    const [cameraPermission, setCameraPermission] = useState()\n    const [recordVideoPermission, setRecordVideoPermission] = useState()\n    const [audioPermission, setAudioPermission] = useState()\n\n    const sliderOnChange = (v)=>{\n            setSliderValue(Math.floor(v))\n    }\n\n    const sliderOnChangeEnd = (v)=>{\n        setSliderValue(Math.floor(v))\n    }\n\n    // const pickImage = async () => {\n    //     // No permissions request is necessary for launching the image library\n    //     let result = await ImagePicker.launchImageLibraryAsync({\n    //       mediaTypes: ImagePicker.MediaTypeOptions.All,\n    //       allowsEditing: true,\n    //       aspect: [4, 3],\n    //       quality: 1,\n    //     });\n    //     result ? setImage(result.uri) : null\n    // }\n\n    // const takePhoto = async ()=>{\n    //     const { status } = await Camera.requestCameraPermissionsAsync();\n    //     setCameraPermission(status === 'granted');\n\n    //     const {uri} = await ImagePicker.launchCameraAsync()\n    //     setImage(uri)\n    //     const s = await Camera.requestCameraPermissionsAsync().status\n    //     setRecordVideoPermission(s === \"granted\")\n    //     const audio = await Camera.requestMicrophonePermissionsAsync().status\n    //     setAudioPermission(audio === \"granted\")\n    // }\n\n    const startRecordVideo = async ()=>{\n        try {\n            const {uri} = await videoRef.current.recordAsync({ quality: '1080p'})\n            alert(uri)\n            setVideo(uri)\n        } catch (error) {\n            alert(error)\n        } \n    }\n    const stopRecordVideo = ()=>{\n       \n        const stopRec = videoRef.current.stopRecording()\n    }\n\n    const closeVideoRecording = ()=>{\n        setOnRecording(false)\n    }\n\n\n    return(\n        <>\n        { onRecording ? <RecordVideo start={startRecordVideo} videoRef={videoRef} stop={stopRecordVideo} close={closeVideoRecording}/> : \n        <ScrollView>\n        <Center>\n            <VStack w=\"100%\">\n            <HStack alignItems=\"center\" justifyContent=\"space-around\" mt=\"60\" mb=\"30\">\n                <Text onPress={()=>handleShowModal(false)}>Cancel</Text>\n                <Heading>Add Rewards</Heading>\n                <Text>Save</Text>\n            </HStack>\n\n            <Center>\n                <FormControl w=\"80%\">\n                    <Stack mb=\"5\">\n                        <FormControl.Label>Title</FormControl.Label>\n                        <Input p={2} placeholder=\"Title\"  borderRadius=\"10\"/>\n                    </Stack>\n                    <Stack mb=\"5\">\n                        <FormControl.Label>URL/Link</FormControl.Label>\n                        <Input p={2} placeholder=\"URL/Link\"  borderRadius=\"10\"/>\n                    </Stack>\n\n                    <VStack mb=\"5\">\n                        <Text>Points</Text>\n                        <Box bg={colors.gray}  mt=\"3\"  borderRadius=\"10\" p=\"5\">\n                            <Slider size=\"lg\" defaultValue={0} onChange={sliderOnChange} onChangeEnd={sliderOnChangeEnd} videoRef={videoRef}>\n                            <Slider.Track>\n                                <Slider.FilledTrack />\n                            </Slider.Track>\n                            <Slider.Thumb />\n                            </Slider>\n                            <Text textAlign=\"center\"> {sliderValue}</Text>\n                        </Box>\n                        <Text mt=\"2\" fontSize=\"10\">Required Points</Text>\n                    </VStack>\n\n                    <VStack  mb=\"5\">\n                    <Text>Attached Photos/Video</Text>\n                    {image ?   <Image source={{ uri: image }} style={{ width: 200, height: 200 }} alt=\"image\"/> : null}\n                    {video ? <Video style={{ width: 200, height: 200 }}\n                    source={{uri : video}} useNativeControls resizeMode=\"contain\" \n                    /> : null}\n                    <Button onPress={()=>takePhoto(setCameraPermission, setAudioPermission, setRecordVideoPermission)} mb=\"2\">take an  image</Button>\n                    <Button onPress={()=>setOnRecording(true)} mb=\"2\">record a video</Button>\n                    <Button onPress={pickImage}>Pic image</Button>\n                    <Button onPress={()=>alert(video)}>see url</Button>\n                    </VStack>\n\n                    <Stack mb=\"5\">\n                        <FormControl.Label>Notes</FormControl.Label>\n                        <TextArea p={2} placeholder=\"Instruction, Guide, Help...\" borderRadius=\"10\" height=\"150\"/>\n                    </Stack>\n                    \n                    <VStack space=\"6\" mb=\"70\">                    \n                    <Button p=\"5\" borderRadius=\"10\">Save</Button>\n                    <Center>\n                    <Button w=\"80%\" p=\"4\" borderRadius=\"10\" onPress={()=>handleShowModal(false)}>Cancel/Delete</Button>\n                    </Center>\n                    </VStack>\n                </FormControl>\n            </Center>\n            </VStack>\n        </Center>\n    </ScrollView>\n    }\n    </>\n    )\n}"]},"metadata":{},"sourceType":"module"}