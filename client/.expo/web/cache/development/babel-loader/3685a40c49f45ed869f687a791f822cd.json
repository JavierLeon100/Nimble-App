{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Button } from \"native-base\";\nimport PlusButton from \"../buttons/PlusButton\";\nimport AllOrSuggested from \"../layout/AllOrSuggested\";\nimport EachReward from \"../listItems/rewards/EachReward\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useState } from \"react\";\nimport ModalForAddRewards from \"../modal/modalForAddRewards\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar exampleArray = [\"Xbox\", \"Playstation\", \"Pc\", \"Noooooooo\", \"Reward\", \"Naaaaaaa\"];\nexport default function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var handleShowModal = function handleShowModal(boo) {\n    boo ? setShowModal(true) : setShowModal(false);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(AllOrSuggested, {}), _jsx(FlatGrid, {\n      mt: \"4\",\n      data: exampleArray,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(EachReward, {\n          reward: item\n        });\n      },\n      itemDimension: 130,\n      spacing: 19\n    }), _jsx(PlusButton, {}), _jsx(Button, {\n      onPress: function onPress() {\n        return setShowModal(true);\n      },\n      children: \"Test modal\"\n    }), _jsx(Modal, {\n      visible: showModal,\n      presentationStyle: \"formSheet\",\n      animationType: \"slide\",\n      children: _jsx(ModalForAddRewards, {\n        handleShowModal: handleShowModal\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/jjleo/Documents/WDMM/Term_4/Nimble/nimble-project/src/component/screens/RewardScreen.js"],"names":["Button","PlusButton","AllOrSuggested","EachReward","FlatGrid","useState","ModalForAddRewards","exampleArray","showModal","setShowModal","handleShowModal","boo","item"],"mappings":";AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,kBAAP;;;;AAEA,IAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,aAAT,EAAwB,IAAxB,EAA8B,WAA9B,EAA2C,QAA3C,EAAqD,UAArD,CAArB;AACA,eAAe,YAAU;AAErB,kBAAkCF,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAO;AAC3BA,IAAAA,GAAG,GAAGF,YAAY,CAAC,IAAD,CAAf,GAAwBA,YAAY,CAAC,KAAD,CAAvC;AACH,GAFD;;AAIA,SACI;AAAA,eACA,KAAC,cAAD,KADA,EAGA,KAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAiB,MAAA,IAAI,EAAEF,YAAvB;AAAqC,MAAA,UAAU,EAAE;AAAA,YAAEK,IAAF,QAAEA,IAAF;AAAA,eAAU,KAAC,UAAD;AAAY,UAAA,MAAM,EAAEA;AAApB,UAAV;AAAA,OAAjD;AAAwF,MAAA,aAAa,EAAE,GAAvG;AAA4G,MAAA,OAAO,EAAE;AAArH,MAHA,EAIA,KAAC,UAAD,KAJA,EAKA,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAIH,YAAY,CAAC,IAAD,CAAhB;AAAA,OAAjB;AAAA;AAAA,MALA,EAOA,KAAC,KAAD;AAAO,MAAA,OAAO,EAAED,SAAhB;AAA2B,MAAA,iBAAiB,EAAC,WAA7C;AAAyD,MAAA,aAAa,EAAC,OAAvE;AAAA,gBACY,KAAC,kBAAD;AAAoB,QAAA,eAAe,EAAEE;AAArC;AADZ,MAPA;AAAA,IADJ;AAaH","sourcesContent":["import { Button } from \"native-base\";\r\nimport PlusButton from \"../buttons/PlusButton\";\r\nimport AllOrSuggested from \"../layout/AllOrSuggested\";\r\nimport EachReward from \"../listItems/rewards/EachReward\";\r\nimport { FlatGrid } from 'react-native-super-grid';\r\nimport { Modal } from \"react-native\";\r\nimport { useState } from \"react\";\r\nimport ModalForAddRewards from \"../modal/modalForAddRewards\";\r\n\r\nconst exampleArray = [\"Xbox\", \"Playstation\", \"Pc\", \"Noooooooo\", \"Reward\", \"Naaaaaaa\"]\r\nexport default function(){\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n    const handleShowModal = (boo)=>{\r\n        boo ? setShowModal(true) : setShowModal(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <AllOrSuggested />\r\n\r\n        <FlatGrid mt=\"4\" data={exampleArray} renderItem={({item})=><EachReward reward={item}/>} itemDimension={130} spacing={19}/>\r\n        <PlusButton />\r\n        <Button onPress={()=>setShowModal(true)}>Test modal</Button>\r\n\r\n        <Modal visible={showModal} presentationStyle=\"formSheet\" animationType=\"slide\">\r\n                    <ModalForAddRewards handleShowModal={handleShowModal}/>\r\n        </Modal>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}