{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PlusButton from \"../buttons/PlusButton\";\nimport AllOrSuggested from \"../layout/AllOrSuggested\";\nimport Date from \"../layout/Date\";\nimport EachTask from \"../listItems/tasks/EachTasks\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ModalDetailForActivity from \"../modal/modalDetailForActivity\";\nimport { useState } from \"react\";\nimport { Button, FlatList } from \"native-base\";\nimport ChildsProfileScreen from \"./ChildsProfileScreeen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar exampleArray = [{\n  id: 1,\n  task: \"Weeping\"\n}, {\n  id: 2,\n  task: \"Washing Dishes\"\n}, {\n  id: 3,\n  task: \"Preparing Meals\"\n}, {\n  id: 4,\n  task: \"Studying\"\n}];\nexport default function Index(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var handleShowModal = function handleShowModal(boo) {\n    boo ? setShowModal(true) : setShowModal(false);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      childsView = _useState4[0],\n      setChildsView = _useState4[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(AllOrSuggested, {}), _jsx(Date, {}), _jsx(FlatList, {\n      data: exampleArray,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(EachTask, {\n          task: item.task,\n          i: item.id,\n          handleShowModal: handleShowModal\n        });\n      }\n    }), _jsx(PlusButton, {}), _jsx(Modal, {\n      visible: showModal,\n      presentationStyle: \"formSheet\",\n      animationType: \"slide\",\n      children: _jsx(ModalDetailForActivity, {\n        handleShowModal: handleShowModal\n      })\n    }), _jsx(Button, {\n      title: \"Go to Child's View\",\n      onPress: function onPress() {\n        navigation.navigate('ChildsView');\n      },\n      children: \"Child's View\"\n    }), Platform.OS === \"android\" ? _jsx(Button, {\n      onPress: function onPress() {\n        setShowModal(true);\n      },\n      children: \"test modal view\"\n    }) : null]\n  });\n}","map":{"version":3,"sources":["/Users/rachel/Desktop/NIMBLE-APP/client/src/component/screens/TaskScreen.js"],"names":["PlusButton","AllOrSuggested","Date","EachTask","ModalDetailForActivity","useState","Button","FlatList","ChildsProfileScreen","exampleArray","id","task","Index","navigation","showModal","setShowModal","handleShowModal","boo","childsView","setChildsView","item","navigate","Platform","OS"],"mappings":";AAAA,OAAOA,UAAP;AACA,OAAOC,cAAP;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;;;AAEA,OAAOC,sBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,aAAjC;AACA,OAAOC,mBAAP;;;;AAIA,IAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAG,CADT;AAEIC,EAAAA,IAAI,EAAI;AAFZ,CADiB,EAKjB;AACID,EAAAA,EAAE,EAAG,CADT;AAEIC,EAAAA,IAAI,EAAG;AAFX,CALiB,EASjB;AACID,EAAAA,EAAE,EAAG,CADT;AAEIC,EAAAA,IAAI,EAAG;AAFX,CATiB,EAajB;AACID,EAAAA,EAAE,EAAG,CADT;AAEIC,EAAAA,IAAI,EAAG;AAFX,CAbiB,CAArB;AAmBA,eAAe,SAASC,KAAT,OAA4B;AAAA,MAAZC,UAAY,QAAZA,UAAY;;AACvC,kBAAkCR,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAO;AAC3BA,IAAAA,GAAG,GAAGF,YAAY,CAAC,IAAD,CAAf,GAAwBA,YAAY,CAAC,KAAD,CAAvC;AACH,GAFD;;AAIA,mBAAoCV,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOa,UAAP;AAAA,MAAmBC,aAAnB;;AAGA,SACI;AAAA,eACA,KAAC,cAAD,KADA,EAEA,KAAC,IAAD,KAFA,EAIA,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEV,YAAhB;AAA8B,MAAA,UAAU,EAAE;AAAA,YAAEW,IAAF,SAAEA,IAAF;AAAA,eAAU,KAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAI,CAACT,IAArB;AAA2B,UAAA,CAAC,EAAES,IAAI,CAACV,EAAnC;AAAuC,UAAA,eAAe,EAAEM;AAAxD,UAAV;AAAA;AAA1C,MAJA,EAOA,KAAC,UAAD,KAPA,EASA,KAAC,KAAD;AAAO,MAAA,OAAO,EAAEF,SAAhB;AAA2B,MAAA,iBAAiB,EAAC,WAA7C;AAAyD,MAAA,aAAa,EAAC,OAAvE;AAAA,gBACY,KAAC,sBAAD;AAAwB,QAAA,eAAe,EAAEE;AAAzC;AADZ,MATA,EAaA,KAAC,MAAD;AACA,MAAA,KAAK,EAAC,oBADN;AAEA,MAAA,OAAO,EAAE,mBAAI;AAETH,QAAAA,UAAU,CAACQ,QAAX,CAAoB,YAApB;AACH,OALD;AAAA;AAAA,MAbA,EAsBCC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GACD,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,mBAAI;AAACR,QAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoB,OAA1C;AAAA;AAAA,MADC,GAED,IAxBA;AAAA,IADJ;AA6BH","sourcesContent":["import PlusButton from \"../buttons/PlusButton\";\nimport AllOrSuggested from \"../layout/AllOrSuggested\";\nimport Date from \"../layout/Date\";\nimport EachTask from \"../listItems/tasks/EachTasks\";\nimport {Modal, Platform} from \"react-native\"\nimport ModalDetailForActivity from \"../modal/modalDetailForActivity\";\nimport { useState } from \"react\";\nimport { Button, FlatList } from \"native-base\";\nimport ChildsProfileScreen from \"./ChildsProfileScreeen\";\n\n\n\nconst exampleArray = [\n    {\n        id : 1, \n        task  : \"Weeping\"\n    }, \n    {\n        id : 2,\n        task : \"Washing Dishes\",\n    },\n    {\n        id : 3,\n        task : \"Preparing Meals\"\n    },\n    {\n        id : 4,\n        task : \"Studying\"\n    }\n    ]\n\nexport default function Index({navigation}){\n    const [showModal, setShowModal] = useState(false)\n    const handleShowModal = (boo)=>{\n        boo ? setShowModal(true) : setShowModal(false)\n    }\n\n    const [childsView, setChildsView] = useState(false);\n\n\n    return(\n        <>\n        <AllOrSuggested />\n        <Date />\n\n        <FlatList data={exampleArray} renderItem={({item})=><EachTask task={item.task} i={item.id} handleShowModal={handleShowModal} />}>\n\n        </FlatList>\n        <PlusButton />\n\n        <Modal visible={showModal} presentationStyle=\"formSheet\" animationType=\"slide\">\n                    <ModalDetailForActivity handleShowModal={handleShowModal}/>\n        </Modal>\n\n        <Button \n        title=\"Go to Child's View\"\n        onPress={()=>{\n            // alert(\"Show Child's View!!\");\n            navigation.navigate('ChildsView');\n        }}\n        >Child's View</Button>\n\n\n        {Platform.OS === \"android\" ? \n        <Button onPress={()=>{setShowModal(true);}}>test modal view</Button> :\n        null}\n       \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}